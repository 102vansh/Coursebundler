# version: '3'
# services:
#   front:
#     build: 
#       context: './frontend'
#       dockerfile: 'Dockerfile'
#     ports:
#       - 3000:3000
#     container_name: 'front'
#     environment:
#       - WATCHPACK_POLLING=true
#     networks:
#       - mern-stack-network
#     volumes:
#       - ./frontend:/app
#     depends_on:
#       - backend  
        

#   backend:   
#     build: 
#       context: './backend'
#       dockerfile: 'Dockerfile' 
#     ports:  
#       - 3001:5000
#     container_name: 'express-container'  
#     networks:
#       - mern-stack-network
#     volumes:
#       - ./backend:/app
#     depends_on:
#       - mongo
#     restart: always
    


#   mongo:  
#     image: mongo
#     ports:
#       - 27017:27017
#     container_name: 'mongo'
#     networks:
#       - mern-stack-network
#     volumes:
#       - mongoData:/data/db
#     environment:
#       MONGO_INITDB_ROOT_USERNAME =vanshjain
#       MONGO_INITDB_ROOT_PASSWORD=vansh%402002
#       MONGO_INIT_DATABASE=cousrebundler
      
# networks:
#   mern-stack-network:
# volumes:
#   mongoData:
      

version: '3'
services:
  front:
    build: 
      context: './frontend'
      dockerfile: 'Dockerfile'
    ports:
      - "3000:3000"
    container_name: 'front'
    environment:
      - WATCHPACK_POLLING=true
    networks:
      - mern-stack-network
    volumes:
      - ./frontend:/app
    depends_on:
      - backend  

  backend:   
    build: 
      context: './backend'
      dockerfile: 'Dockerfile' 
    ports:  
      - "3001:5000"
    container_name: 'express-container'  
    networks:
      - mern-stack-network
    volumes:
      - ./backend:/app
    depends_on:
      - mongo
    restart: always

  mongo:  
    image: mongo
    ports:
      - "27017:27017"
    container_name: 'mongo'
    networks:
      - mern-stack-network
    volumes:
      - mongoData:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INIT_DATABASE: coursebundler

networks:
  mern-stack-network:

volumes:
  mongoData:
